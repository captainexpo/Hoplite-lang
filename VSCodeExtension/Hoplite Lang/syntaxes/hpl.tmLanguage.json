{
    "scopeName": "source.hpl",
    "patterns": [
        {"include": "#comment"},
        {"include": "#keyword"},
        {"include": "#function-call"},
        {"include": "#strings"},
        {"include": "#number"},
        {"include": "#operators"},
        {"include": "#name"},
        {"include": "#groupers"}

    ],
    "repository": {
        "function-call": {
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\s*\\(",
            "name": "entity.name.function.hpl"
        },
        "keyword": {
            "match": "\\b(if|else|while|return|mkfunc|true|false|return|var)\\b",
            "name": "keyword.control.hpl"
        },
        "groupers": {
            "match": "\\(|\\)|\\{|\\}|\\[|\\]",
            "name": "punctuation.section.group.hpl"
        },
        "comment": {
            "match": "\/\/.*$",
            "name": "comment.line.double-slash.hpl"
        },
        "strings":{
            "patterns": [
                {"include": "#string-double"},
                {"include": "#string-single"}
            ]
        },
        "string-double": {
            "begin": "\"",
            "end": "\"",
            "name": "string.quoted.double.hpl",
            "patterns": [
                {"match": "\\\\[\"\\\\]"}
            ]
        },
        "string-single": {
            "begin": "'",
            "end": "'",
            "name": "string.quoted.single.hpl",
            "patterns": [
                {"match": "\\\\[\"\\\\]"}
            ]
        },
        "number": {
            "patterns": [
                {"include":"#integer"},
                {"include":"#float"}
            ]
        },
        "integer":{
            "match": "\\b\\d+\\b",
            "name": "constant.numeric.integer.hpl"
        },
        "float":{
            "match": "\\b\\d+\\.\\d+\\b",
            "name": "constant.numeric.float.hpl"
        },
        "operators":{
            "patterns": [
                {"include": "#operator-assignment"},
                {"include": "#operator-comparison"},
                {"include": "#operator-arithmetic"}
            ]
        },
        "operator-assignment": {
            "match": "=",
            "name": "keyword.operator.assignment.hpl"
        },
        "operator-comparison": {
            "match": "==|<|>|<=|>=",
            "name": "keyword.operator.comparison.hpl"
        },
        "operator-arithmetic": {
            "match": "\\+|-|\\*|\\/|\\%|\\^",
            "name": "keyword.operator.arithmetic.hpl"
        },
        "name": {
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
            "name": "variable.other.hpl"
        }
    }
}
